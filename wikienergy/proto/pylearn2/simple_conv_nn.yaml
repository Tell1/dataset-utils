!obj:pylearn2.train.Train {
    dataset: &train !pkl: "/home/pngo/data/train_fake_ac_day.pkl",
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 100,
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [10,1],
            num_channels: 1
        },
        layers: [ !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h2',
                     output_channels: 64,
                     irange: .05,
                     kernel_shape: [5, 1],
                     pool_shape: [4, 1],
                     pool_stride: [2, 1],
                     max_kernel_norm: 1.9365
                 }, !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 2,
                     istdev: .05
                 }
                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD {
        batch_size: 100,
        line_search_mode: 'exhaustive',
        conjugate: 1,
        monitoring_dataset:
        {
            'train' : *train,
            'valid' : !pkl: "/home/pngo/data/valid_fake_ac_day.pkl",
            'test'  : !pkl: "/home/pngo/data/test_fake_ac_day.pkl",
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass"
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "models/conv_softmax_regression_best.pkl"
        },
    ],
    save_path: "models/conv_softmax_regression.pkl",
    save_freq: 1
}
